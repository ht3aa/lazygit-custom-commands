gui: 
  # DRACULA
  theme:
    activeBorderColor:
      - "#FF79C6"
      - bold
    inactiveBorderColor:
      - "#BD93F9"

    searchingActiveBorderColor:
      - "#8BE9FD"
      - bold

    optionsTextColor:
      - "#6272A4"

    selectedLineBgColor:
      - "#6272A4"

    inactiveViewSelectedLineBgColor:
      - bold

    cherryPickedCommitFgColor:
      - "#6272A4"

    cherryPickedCommitBgColor:
      - "#8BE9FD"

    markedBaseCommitFgColor:
      - "#8BE9FD"

    markedBaseCommitBgColor:
      - "#F1FA8C"

    unstagedChangesColor:
      - "#FF5555"

    defaultFgColor:
      - "#F8F8F2"

customCommands:

  - key: 'N'
    context: 'localBranches'
    prompts:
      - type: 'menu'
        title: 'What kind of branch is it?'
        key: 'BranchType'
        options:
          - name: 'feature'
            description: 'a feature branch'
            value: 'feature'
          - name: 'hotfix'
            description: 'a hotfix branch'
            value: 'hotfix'
          - name: 'release'
            description: 'a release branch'
            value: 'release'
          - name: 'bugfix'
            description: 'a bugfix branch'
            value: 'bugfix'
          - name: 'urgent'
            description: 'a urgent branch'
            value: 'urgent'
          - name: 'rollback'
            description: 'a rollback branch'
            value: 'rollback'
      - type: 'input'
        title: 'Enter the branch ID (e.g., 1, 2, 3):'
        key: 'BranchId'
        initialValue: ''
      - type: 'input'
        title: 'What is the new branch name?'
        key: 'BranchName'
        initialValue: ''

    command: |
      BRANCH_TYPE="{{.Form.BranchType}}"
      BRANCH_ID="{{.Form.BranchId}}"
      BRANCH_NAME="{{.Form.BranchName}}"


      # Get the current branch name
      CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD | cut -d'/' -f1)

      # Get the current date in YYYY-mm-dd format
      CURRENT_DATE=$(date +"%Y_%m_%d_%I_%M%p")

      # Create the new branch with the provided branch ID and current branch name
      git checkout -b "$BRANCH_TYPE-$BRANCH_ID/$BRANCH_NAME-from-$CURRENT_BRANCH-$CURRENT_DATE"
    loadingText: 'Creating branch'


  - key: 'C'
    context: 'localBranches'
    command: |
      CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
      git push --set-upstream origin $CURRENT_BRANCH
    loadingText: 'Pushing Current Branch'
    

  - key: 'D'
    context: 'localBranches'
    prompts:
      - type: 'menu'
        title: 'Select local branch to merge to after pushing to origin'
        key: 'TargetBranch'
        options:  
          - name: 'dev'
            description: 'dev'
            value: 'dev'
          - name: 'main'
            description: 'main'
            value: 'main'
    command: |
      CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
      git push --set-upstream origin $CURRENT_BRANCH
      git checkout {{.Form.TargetBranch}}
      git merge $CURRENT_BRANCH
      git branch -d $CURRENT_BRANCH
    loadingText: 'Pushing and merging branch'

  - key: "X"
    context: 'localBranches'
    command: |
      # Get the current branch name
      CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

      # Check if the branch ends with "-no-code"
      if [[ "$CURRENT_BRANCH" == *"-no-code" ]]; then
        # Remove the "-no-code" suffix
        NEW_BRANCH_NAME="${CURRENT_BRANCH%-no-code}"
      else
        # Append "-no-code" to the branch name
        NEW_BRANCH_NAME="${CURRENT_BRANCH}-no-code"
      fi

      # Rename the branch locally
      git branch -m "$NEW_BRANCH_NAME"

    loadingText: 'Toggling -no-code suffix on branch name'

