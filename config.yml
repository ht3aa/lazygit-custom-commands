gui: 
  # DRACULA
  theme:
    activeBorderColor:
      - "#FF79C6"
      - bold
    inactiveBorderColor:
      - "#BD93F9"

    searchingActiveBorderColor:
      - "#8BE9FD"
      - bold

    optionsTextColor:
      - "#6272A4"

    selectedLineBgColor:
      - "#6272A4"

    inactiveViewSelectedLineBgColor:
      - bold

    cherryPickedCommitFgColor:
      - "#6272A4"

    cherryPickedCommitBgColor:
      - "#8BE9FD"

    markedBaseCommitFgColor:
      - "#8BE9FD"

    markedBaseCommitBgColor:
      - "#F1FA8C"

    unstagedChangesColor:
      - "#FF5555"

    defaultFgColor:
      - "#F8F8F2"

customCommands:

  - key: 'N'
    context: 'localBranches'
    prompts:
      - type: 'menu'
        title: 'What kind of branch is it?'
        key: 'BranchType'
        options:
          - name: 'feature'
            description: 'a feature branch'
            value: 'feature'
          - name: 'hotfix'
            description: 'a hotfix branch'
            value: 'hotfix'
          - name: 'release'
            description: 'a release branch'
            value: 'release'
          - name: 'bugfix'
            description: 'a bugfix branch'
            value: 'bugfix'
          - name: 'urgent'
            description: 'a urgent branch'
            value: 'urgent'
      - type: 'input'
        title: 'What is the new branch name?'
        key: 'BranchName'
        initialValue: ''

    command: |
      BRANCH_TYPE="{{.Form.BranchType}}"
      BRANCH_NAME="{{.Form.BranchName}}"

      # Get the highest existing branch number across all types
      LAST_BRANCH=$(git branch --list "*-[0-9]*" | grep -oE "(-[0-9]+)" | grep -oE '[0-9]+' | sort -n | tail -n1)

      # Increment the number for the new branch
      if [ -z "$LAST_BRANCH" ]; then
        NEW_BRANCH_NUMBER="1"
      else
        NEW_BRANCH_NUMBER=$((LAST_BRANCH + 1))
      fi

      # Get the current branch name
      CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

      # Create the new branch with the incremented number and current branch name
      git checkout -b "$BRANCH_TYPE-$NEW_BRANCH_NUMBER/$BRANCH_NAME-$CURRENT_BRANCH"
    loadingText: 'Creating branch'



  - key: 'C'
    context: 'localBranches'
    command: |
      CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
      git push --set-upstream origin $CURRENT_BRANCH
    loadingText: 'Pushing Current Branch'
    

  - key: 'D'
    context: 'localBranches'
    prompts:
      - type: 'menu'
        title: 'Select local branch to merge to after pushing to origin'
        key: 'TargetBranch'
        options:  
          - name: 'dev'
            description: 'dev'
            value: 'dev'
          - name: 'main'
            description: 'main'
            value: 'main'
    command: |
      CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
      git push --set-upstream origin $CURRENT_BRANCH
      git checkout {{.Form.TargetBranch}}
      git merge $CURRENT_BRANCH
      git branch -d $CURRENT_BRANCH
    loadingText: 'Pushing and merging branch'
    
